-- üìä –ü—Ä–∏–º–µ—Ä—ã SQL –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ Time Tracker Bot
-- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã –≤ pgAdmin –∏–ª–∏ –ª—é–±–æ–º SQL –∫–ª–∏–µ–Ω—Ç–µ

-- =====================================================
-- üéØ –û–°–ù–û–í–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
-- =====================================================

-- –û–±—â–µ–µ –≤—Ä–µ–º—è –¥–∏–ø–≤–æ—Ä–∫–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è
SELECT 
    user_id,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    SUM(session_count) as total_sessions,
    COUNT(*) as total_days
FROM daily_stats 
GROUP BY user_id;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
SELECT 
    DATE_TRUNC('month', date) as month,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    SUM(session_count) as total_sessions,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day
FROM daily_stats 
WHERE DATE_TRUNC('month', date) = DATE_TRUNC('month', CURRENT_DATE)
GROUP BY DATE_TRUNC('month', date);

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
SELECT 
    DATE_TRUNC('week', date) as week_start,
    DATE_TRUNC('week', date) + INTERVAL '6 days' as week_end,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    SUM(session_count) as total_sessions,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day
FROM daily_stats 
WHERE DATE_TRUNC('week', date) = DATE_TRUNC('week', CURRENT_DATE)
GROUP BY DATE_TRUNC('week', date);

-- =====================================================
-- üìà –¢–†–ï–ù–î–´ –ò –ü–†–û–ì–†–ï–°–°
-- =====================================================

-- –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –Ω–µ–¥–µ–ª—è–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –Ω–µ–¥–µ–ª—å)
SELECT 
    DATE_TRUNC('week', date) as week_start,
    DATE_TRUNC('week', date) + INTERVAL '6 days' as week_end,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day
FROM daily_stats 
WHERE date >= CURRENT_DATE - INTERVAL '12 weeks'
GROUP BY DATE_TRUNC('week', date)
ORDER BY week_start DESC;

-- –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –º–µ—Å—è—Ü–∞–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 12 –º–µ—Å—è—Ü–µ–≤)
SELECT 
    DATE_TRUNC('month', date) as month_start,
    DATE_TRUNC('month', date) + INTERVAL '1 month - 1 day' as month_end,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day
FROM daily_stats 
WHERE date >= CURRENT_DATE - INTERVAL '12 months'
GROUP BY DATE_TRUNC('month', date)
ORDER BY month_start DESC;

-- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –ø–µ—Ä–∏–æ–¥–æ–º
WITH current_period AS (
    SELECT 
        SUM(total_minutes) as total_minutes,
        COUNT(*) as days_count
    FROM daily_stats 
    WHERE date >= DATE_TRUNC('week', CURRENT_DATE)
),
previous_period AS (
    SELECT 
        SUM(total_minutes) as total_minutes,
        COUNT(*) as days_count
    FROM daily_stats 
    WHERE date >= DATE_TRUNC('week', CURRENT_DATE - INTERVAL '1 week')
    AND date < DATE_TRUNC('week', CURRENT_DATE)
)
SELECT 
    cp.total_minutes as current_minutes,
    ROUND(cp.total_minutes / 60.0, 2) as current_hours,
    pp.total_minutes as previous_minutes,
    ROUND(pp.total_minutes / 60.0, 2) as previous_hours,
    CASE 
        WHEN pp.total_minutes > 0 THEN 
            ROUND(((cp.total_minutes - pp.total_minutes) / pp.total_minutes::float) * 100, 2)
        ELSE NULL 
    END as change_percent
FROM current_period cp
CROSS JOIN previous_period pp;

-- =====================================================
-- üóìÔ∏è –ê–ù–ê–õ–ò–ó –ü–û –î–ù–Ø–ú –ù–ï–î–ï–õ–ò
-- =====================================================

-- –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏
SELECT 
    EXTRACT(DOW FROM date) as day_of_week,
    CASE EXTRACT(DOW FROM date)
        WHEN 0 THEN '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        WHEN 1 THEN '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
        WHEN 2 THEN '–í—Ç–æ—Ä–Ω–∏–∫'
        WHEN 3 THEN '–°—Ä–µ–¥–∞'
        WHEN 4 THEN '–ß–µ—Ç–≤–µ—Ä–≥'
        WHEN 5 THEN '–ü—è—Ç–Ω–∏—Ü–∞'
        WHEN 6 THEN '–°—É–±–±–æ—Ç–∞'
    END as day_name,
    COUNT(*) as days_count,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    ROUND(AVG(total_minutes), 2) as avg_minutes,
    ROUND(AVG(total_minutes) / 60.0, 2) as avg_hours
FROM daily_stats 
GROUP BY EXTRACT(DOW FROM date)
ORDER BY day_of_week;

-- –õ—É—á—à–∏–µ –∏ —Ö—É–¥—à–∏–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
WITH day_stats AS (
    SELECT 
        EXTRACT(DOW FROM date) as day_of_week,
        CASE EXTRACT(DOW FROM date)
            WHEN 0 THEN '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
            WHEN 1 THEN '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
            WHEN 2 THEN '–í—Ç–æ—Ä–Ω–∏–∫'
            WHEN 3 THEN '–°—Ä–µ–¥–∞'
            WHEN 4 THEN '–ß–µ—Ç–≤–µ—Ä–≥'
            WHEN 5 THEN '–ü—è—Ç–Ω–∏—Ü–∞'
            WHEN 6 THEN '–°—É–±–±–æ—Ç–∞'
        END as day_name,
        AVG(total_minutes) as avg_minutes
    FROM daily_stats 
    GROUP BY EXTRACT(DOW FROM date)
)
SELECT 
    day_name,
    ROUND(avg_minutes, 2) as avg_minutes,
    ROUND(avg_minutes / 60.0, 2) as avg_hours,
    CASE 
        WHEN avg_minutes = (SELECT MAX(avg_minutes) FROM day_stats) THEN 'üèÜ –õ—É—á—à–∏–π'
        WHEN avg_minutes = (SELECT MIN(avg_minutes) FROM day_stats) THEN '‚ö†Ô∏è –•—É–¥—à–∏–π'
        ELSE 'üìä –°—Ä–µ–¥–Ω–∏–π'
    END as performance
FROM day_stats
ORDER BY avg_minutes DESC;

-- =====================================================
-- üéØ –¶–ï–õ–ò –ò –î–û–°–¢–ò–ñ–ï–ù–ò–Ø
-- =====================================================

-- –î–Ω–∏, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª—å (4+ —á–∞—Å–æ–≤ –¥–∏–ø–≤–æ—Ä–∫–∞)
SELECT 
    date,
    total_minutes,
    ROUND(total_minutes / 60.0, 2) as hours,
    session_count,
    CASE 
        WHEN total_minutes >= 240 THEN 'üéâ –û—Ç–ª–∏—á–Ω–æ!'
        WHEN total_minutes >= 180 THEN 'üëç –•–æ—Ä–æ—à–æ'
        WHEN total_minutes >= 120 THEN 'üëå –ù–µ–ø–ª–æ—Ö–æ'
        ELSE 'üí™ –ú–æ–∂–Ω–æ –ª—É—á—à–µ'
    END as achievement
FROM daily_stats 
WHERE total_minutes > 0
ORDER BY date DESC;

-- –ü—Ä–æ—Ü–µ–Ω—Ç –¥–Ω–µ–π, –∫–æ–≥–¥–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª—å
SELECT 
    COUNT(CASE WHEN total_minutes >= 240 THEN 1 END) as days_with_goal,
    COUNT(*) as total_days,
    ROUND(
        (COUNT(CASE WHEN total_minutes >= 240 THEN 1 END)::float / COUNT(*)) * 100, 
        2
    ) as goal_percentage
FROM daily_stats 
WHERE total_minutes > 0;

-- –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π —Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º —Ü–µ–ª–∏
WITH goal_days AS (
    SELECT 
        date,
        total_minutes,
        CASE WHEN total_minutes >= 240 THEN 1 ELSE 0 END as goal_achieved
    FROM daily_stats 
    WHERE total_minutes > 0
    ORDER BY date DESC
),
streak AS (
    SELECT 
        date,
        goal_achieved,
        SUM(CASE WHEN goal_achieved = 0 THEN 1 ELSE 0 END) 
            OVER (ORDER BY date DESC) as streak_group
    FROM goal_days
)
SELECT 
    COUNT(*) as current_streak_days
FROM streak 
WHERE streak_group = 0;

-- =====================================================
-- üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –ê–ù–ê–õ–ò–¢–ò–ö–ê –°–ï–°–°–ò–ô
-- =====================================================

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Å—Å–∏–π
SELECT 
    CASE 
        WHEN duration_minutes < 30 THEN '–ö–æ—Ä–æ—Ç–∫–∏–µ (< 30 –º–∏–Ω)'
        WHEN duration_minutes < 60 THEN '–°—Ä–µ–¥–Ω–∏–µ (30-60 –º–∏–Ω)'
        WHEN duration_minutes < 120 THEN '–î–ª–∏–Ω–Ω—ã–µ (1-2 —á–∞—Å–∞)'
        WHEN duration_minutes < 240 THEN '–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ (2-4 —á–∞—Å–∞)'
        ELSE '–ú–∞—Ä–∞—Ñ–æ–Ω—Å–∫–∏–µ (4+ —á–∞—Å–∞)'
    END as session_type,
    COUNT(*) as session_count,
    ROUND(AVG(duration_minutes), 2) as avg_duration,
    ROUND(MIN(duration_minutes), 2) as min_duration,
    ROUND(MAX(duration_minutes), 2) as max_duration
FROM deepwork_sessions 
WHERE duration_minutes IS NOT NULL
GROUP BY 
    CASE 
        WHEN duration_minutes < 30 THEN '–ö–æ—Ä–æ—Ç–∫–∏–µ (< 30 –º–∏–Ω)'
        WHEN duration_minutes < 60 THEN '–°—Ä–µ–¥–Ω–∏–µ (30-60 –º–∏–Ω)'
        WHEN duration_minutes < 120 THEN '–î–ª–∏–Ω–Ω—ã–µ (1-2 —á–∞—Å–∞)'
        WHEN duration_minutes < 240 THEN '–û—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ (2-4 —á–∞—Å–∞)'
        ELSE '–ú–∞—Ä–∞—Ñ–æ–Ω—Å–∫–∏–µ (4+ —á–∞—Å–∞)'
    END
ORDER BY avg_duration DESC;

-- –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–µ—Å—Å–∏–π –ø–æ —á–∞—Å–∞–º
SELECT 
    EXTRACT(HOUR FROM start_time) as hour,
    COUNT(*) as session_count,
    ROUND(AVG(duration_minutes), 2) as avg_duration
FROM deepwork_sessions 
WHERE duration_minutes IS NOT NULL
GROUP BY EXTRACT(HOUR FROM start_time)
ORDER BY hour;

-- –°–∞–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Å—ã
SELECT 
    EXTRACT(HOUR FROM start_time) as hour,
    COUNT(*) as session_count,
    SUM(duration_minutes) as total_minutes,
    ROUND(SUM(duration_minutes) / 60.0, 2) as total_hours,
    ROUND(AVG(duration_minutes), 2) as avg_duration
FROM deepwork_sessions 
WHERE duration_minutes IS NOT NULL
GROUP BY EXTRACT(HOUR FROM start_time)
ORDER BY total_minutes DESC;

-- =====================================================
-- üîÑ –°–†–ê–í–ù–ï–ù–ò–Ø –ò –ë–ï–ù–ß–ú–ê–†–ö–ò
-- =====================================================

-- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
WITH period_comparison AS (
    SELECT 
        CASE 
            WHEN date >= CURRENT_DATE - INTERVAL '7 days' THEN '–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è'
            WHEN date >= CURRENT_DATE - INTERVAL '14 days' THEN '–ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è'
            WHEN date >= CURRENT_DATE - INTERVAL '21 days' THEN '2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥'
            WHEN date >= CURRENT_DATE - INTERVAL '28 days' THEN '3 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥'
        END as period,
        SUM(total_minutes) as total_minutes,
        COUNT(*) as days_count
    FROM daily_stats 
    WHERE date >= CURRENT_DATE - INTERVAL '28 days'
    GROUP BY 
        CASE 
            WHEN date >= CURRENT_DATE - INTERVAL '7 days' THEN '–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è'
            WHEN date >= CURRENT_DATE - INTERVAL '14 days' THEN '–ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è'
            WHEN date >= CURRENT_DATE - INTERVAL '21 days' THEN '2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥'
            WHEN date >= CURRENT_DATE - INTERVAL '28 days' THEN '3 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥'
        END
)
SELECT 
    period,
    total_minutes,
    ROUND(total_minutes / 60.0, 2) as total_hours,
    days_count,
    ROUND(total_minutes / days_count, 2) as avg_minutes_per_day
FROM period_comparison
ORDER BY 
    CASE period
        WHEN '–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è' THEN 1
        WHEN '–ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è' THEN 2
        WHEN '2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥' THEN 3
        WHEN '3 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥' THEN 4
    END;

-- =====================================================
-- üìà –ü–†–û–ì–ù–û–ó–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò
-- =====================================================

-- –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
SELECT 
    '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é' as info,
    ROUND(AVG(total_minutes) * 7, 2) as predicted_minutes,
    ROUND(AVG(total_minutes) * 7 / 60.0, 2) as predicted_hours,
    ROUND(AVG(session_count) * 7, 2) as predicted_sessions
FROM daily_stats 
WHERE date >= CURRENT_DATE - INTERVAL '4 weeks';

-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
SELECT 
    CASE 
        WHEN avg_daily < 120 THEN 'üí™ –£–≤–µ–ª–∏—á—å—Ç–µ –≤—Ä–µ–º—è –¥–∏–ø–≤–æ—Ä–∫–∞ –¥–æ 2+ —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å'
        WHEN avg_daily < 240 THEN 'üëç –•–æ—Ä–æ—à–æ! –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ 4+ —á–∞—Å–∞–º –≤ –¥–µ–Ω—å'
        WHEN avg_daily < 360 THEN 'üéâ –û—Ç–ª–∏—á–Ω–æ! –í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏'
        ELSE 'üèÜ –ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ! –í—ã –º–∞—Å—Ç–µ—Ä –¥–∏–ø–≤–æ—Ä–∫–∞!'
    END as recommendation,
    ROUND(avg_daily, 2) as current_avg_minutes,
    ROUND(avg_daily / 60.0, 2) as current_avg_hours
FROM (
    SELECT AVG(total_minutes) as avg_daily
    FROM daily_stats 
    WHERE date >= CURRENT_DATE - INTERVAL '2 weeks'
) as stats;

-- =====================================================
-- üé® –°–û–ó–î–ê–ù–ò–ï –û–¢–ß–ï–¢–û–í
-- =====================================================

-- –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
CREATE OR REPLACE VIEW weekly_report AS
SELECT 
    DATE_TRUNC('week', date) as week_start,
    DATE_TRUNC('week', date) + INTERVAL '6 days' as week_end,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    SUM(session_count) as total_sessions,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day,
    COUNT(CASE WHEN total_minutes >= 240 THEN 1 END) as days_with_goal,
    ROUND(
        (COUNT(CASE WHEN total_minutes >= 240 THEN 1 END)::float / COUNT(*)) * 100, 
        2
    ) as goal_percentage
FROM daily_stats 
GROUP BY DATE_TRUNC('week', date)
ORDER BY week_start DESC;

-- –ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç
CREATE OR REPLACE VIEW monthly_report AS
SELECT 
    DATE_TRUNC('month', date) as month_start,
    DATE_TRUNC('month', date) + INTERVAL '1 month - 1 day' as month_end,
    SUM(total_minutes) as total_minutes,
    ROUND(SUM(total_minutes) / 60.0, 2) as total_hours,
    SUM(session_count) as total_sessions,
    COUNT(*) as days_with_work,
    ROUND(AVG(total_minutes), 2) as avg_minutes_per_day,
    COUNT(CASE WHEN total_minutes >= 240 THEN 1 END) as days_with_goal,
    ROUND(
        (COUNT(CASE WHEN total_minutes >= 240 THEN 1 END)::float / COUNT(*)) * 100, 
        2
    ) as goal_percentage
FROM daily_stats 
GROUP BY DATE_TRUNC('month', date)
ORDER BY month_start DESC;

-- =====================================================
-- üîç –ü–û–õ–ï–ó–ù–´–ï –ó–ê–ü–†–û–°–´ –î–õ–Ø –û–¢–õ–ê–î–ö–ò
-- =====================================================

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
SELECT 
    '–°–µ—Å—Å–∏–∏ –±–µ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è' as issue,
    COUNT(*) as count
FROM deepwork_sessions 
WHERE end_time IS NULL
UNION ALL
SELECT 
    '–°–µ—Å—Å–∏–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é' as issue,
    COUNT(*) as count
FROM deepwork_sessions 
WHERE duration_minutes < 0
UNION ALL
SELECT 
    '–î–Ω–∏ –±–µ–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏' as issue,
    COUNT(*) as count
FROM generate_series(
    CURRENT_DATE - INTERVAL '30 days', 
    CURRENT_DATE, 
    '1 day'::interval
)::date as date
LEFT JOIN daily_stats ds ON ds.date = date
WHERE ds.date IS NULL;

-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
SELECT 
    ub.user_id,
    ub.birthday,
    (CURRENT_DATE - ub.birthday) as days_lived,
    COUNT(ds.date) as tracking_days,
    SUM(ds.total_minutes) as total_minutes,
    ROUND(SUM(ds.total_minutes) / 60.0, 2) as total_hours
FROM user_birthday ub
LEFT JOIN daily_stats ds ON ub.user_id = ds.user_id
GROUP BY ub.user_id, ub.birthday;
